pipeline {
    agent any

    tools {
        python 'Python 3'
    }

    environment {
        GITHUB_CREDENTIALS = credentials('github-creds')
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
        IMAGE_NAME = 'samuelnjoroge/django-messaging-app'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/Samuel-Njoroge/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                withPythonEnv('Python 3') {
                    sh 'pip install -r messaging_app/requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                withPythonEnv('Python 3') {
                    sh 'pytest messaging_app/tests --junitxml=report.xml'
                }
            }
        }

        stage('Publish Test Report') {
            steps {
                junit 'report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $IMAGE_NAME:latest -f messaging_app/Dockerfile ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin"
                    sh "docker push $IMAGE_NAME:latest"
                }
            }
        }
    }
}
